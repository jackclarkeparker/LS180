Add a Semi-Major Axis Column

Add a semi_major_axis column for the semi-major axis of each planet's orbit; the semi-major axis is the average distance from the planet's star as measured in astronomical units (1 AU is the average distance of the Earth from the Sun). Use a data type of numeric, and require that each planet have a value for the semi_major_axis.



ALTER TABLE planets
ADD COLUMN semi_major_axis numeric NOT NULL;



Further Exploration
Assume the planets table already contains one or more rows of data. What will happen when you try to run the above command? What will you need to do differently to obtain the desired result? To test this, delete the semi_major_axis column and then add a row or two of data (note: your stars table will also need some data that corresponds to the star_id values):



If there were already rows of data in the table, and we attempted to add a new column that specified a NOT NULL constraint, an error would be thrown (unless the type was something like serial; this would automatically assigned values to existing rows when it was added)

We could give a default value of 0 so that existing rows wouldn't violate the NOT NULL contraint.



I didn't read further into the question, where values were stated for the semi_major_axis of the
current planets. If we create the column without the NOT NULL constriant, then add these values, then
give the column a NOT NULL constraint, we won't mess with the schema of our table, we don't want
default values really. We'd prefer to require a value be specified.








